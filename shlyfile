;; shlyfile for nan

(load "nan.asd")
(ql:quickload :nan)

(load "nan-test.asd")
(ql:quickload :nan-test)

;; app name
(defvar *app-name* "nan")

;; toplevel function
(defvar *app-toplevel* #'nan:app)

;; save application
(defun save-app ()
  #+sbcl (sb-ext:save-lisp-and-die *app-name*
                                   :toplevel *app-toplevel*
                                   :executable t)
  #+clisp (ext:saveinitmem *app-name*
                           :quiet t
                           :norc t
                           :init-function (lambda ()
                                            (funcall *app-toplevel*)
                                            (ext:exit))
                           :executable t)
  #+ccl (ccl:save-application *app-name*
                              :toplevel-function *app-toplevel*
                              :prepend-kernel t)
  #+ecl (asdf:make-build :nan
                         :type :program
                         :monolithic t
                         :move-here "."
                         :epilogue-code '(nan:app)))

;; test all
(defun test ()
  (cl-test-more:run-test-all))
